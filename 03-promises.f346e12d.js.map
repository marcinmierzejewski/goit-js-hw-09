{"mappings":"AAAA,IAAMA,gBAAkBC,SAASC,cAAc,uBACzCC,eAAiBF,SAASC,cAAc,sBACxCE,YAAcH,SAASC,cAAc,wBACrCG,aAAeJ,SAASC,cAAc,SAI5C,SAASI,kBAAkBC,GACzBA,EAAEC,iBAEF,IADA,IAAIC,EAAQC,OAAOV,gBAAgBW,OAC1BC,EAAW,EAAGA,GAAYR,YAAYO,MAAOC,IACpDC,cAAcD,EAAUH,GACrBK,MAAK,SAAAC,OAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MACjBC,QAAQC,IAAK,uBAAuCC,OAAfJ,EAAS,QAAYI,OAANH,EAAM,UAE3DI,OAAM,SAAAN,OAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MAClBC,QAAQC,IAAK,sBAAoCC,OAAfJ,EAAS,QAAYI,OAANH,EAAM,UAE3DR,GAASC,OAAOP,eAAeQ,OAInC,SAASE,cAAcG,EAAUC,GAC/B,IAAMK,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEV,SAAAA,EAAUC,MAAAA,IAEpBU,EAAO,CAAEX,SAAAA,EAAUC,MAAAA,MAEpBA,MA1BPZ,aAAawB,iBAAiB,SAAUvB","sources":["src/js/03-promises.js"],"sourcesContent":["const firstDelayField = document.querySelector(\"input[name='delay']\");\nconst delayStepField = document.querySelector(\"input[name='step']\");\nconst amountField = document.querySelector(\"input[name='amount']\");\nconst promisesForm = document.querySelector('.form');\n\npromisesForm.addEventListener('submit', promisesGenerator);\n\nfunction promisesGenerator(e) {\n  e.preventDefault();\n  let delay = Number(firstDelayField.value);\n  for (let position = 1; position <= amountField.value; position++) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += Number(delayStepField.value);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["firstDelayField","document","querySelector","delayStepField","amountField","promisesForm","promisesGenerator","e","preventDefault","delay1","Number","value","position1","createPromise","then","param","position","delay","console","log","concat","catch","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener"],"version":3,"file":"03-promises.f346e12d.js.map"}